package com.bcgogo.pojox.api;

import com.bcgogo.pojox.util.NumberUtil;
import com.bcgogo.pojox.util.StringUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.math.BigDecimal;

/**
 * Created by IntelliJ IDEA.
 * Author: ndong
 * Date: 15-10-22
 * Time: 下午2:11
 */
public class GpsUtil {
  private static final Logger LOG = LoggerFactory.getLogger(GpsUtil.class);

  /**
   *
   * @param placeNotes
   * @return 单位是km
   */
  public static double calPlaceNoteDistance(String placeNotes) {
//    LOG.debug("calPlaceNoteDistance:{}", placeNotes);

    if (StringUtil.isEmpty(placeNotes)) return 0;
    String[] placeNoteArr = placeNotes.split("\\|");
    if (placeNoteArr.length <= 1) return 0;
    double last_lat = 0d;
    double last_lng = 0d;
    for (int i = 0; i < placeNoteArr.length; i++) {
      if (StringUtil.isEmptyAppGetParameter(placeNoteArr[i].split(",")[0])
        || StringUtil.isEmptyAppGetParameter(placeNoteArr[i].split(",")[1])) {
        continue;
      }
      last_lat = Double.valueOf(placeNoteArr[i].split(",")[0]);
      last_lng = Double.valueOf(placeNoteArr[i].split(",")[1]);
      if (last_lat > 0 || last_lng > 0) {
        break;
      }
    }
    double distance = 0;
    for (int i = 1; i < placeNoteArr.length; i++) {
      double lat = Double.valueOf(placeNoteArr[i].split(",")[0]);
      double lng = Double.valueOf(placeNoteArr[i].split(",")[1]);
      double tmp_distance = getDistance(last_lat, last_lng, lat, lng);
      if (Double.isNaN(tmp_distance)) {
        continue;
      }
      distance += tmp_distance;
      last_lat = lat;
      last_lng = lng;
    }
    LOG.debug("calPlaceNoteDistance,distance:{}", distance);
    //换算成单位km
    BigDecimal bd = new BigDecimal(distance / 1000);
    BigDecimal bd1 = new BigDecimal(1);
    return bd.divide(bd1, 2, BigDecimal.ROUND_HALF_UP).doubleValue();
  }


  public static double getDistance(double lat_a, double lng_a, double lat_b, double lng_b) {
    double pk = (double) (180 / 3.14169);
    double a1 = lat_a / pk;
    double a2 = lng_a / pk;
    double b1 = lat_b / pk;
    double b2 = lng_b / pk;
    double t1 = Math.cos(a1) * Math.cos(a2) * Math.cos(b1) * Math.cos(b2);
    double t2 = Math.cos(a1) * Math.sin(a2) * Math.cos(b1) * Math.sin(b2);
    double t3 = Math.sin(a1) * Math.sin(b1);
    double tt = Math.acos(t1 + t2 + t3);


    return 6366000 * tt;
  }

  public static void main(String[] args) {
    String placeNoteSrc = "31.298548,120.741578,1397220562000|31.299512,120.741570,1397220572000|31.300488,120.741557,1397220582000|31.300603,120.741537,1397220584000|31.300702,120.741515,1397220586000|31.300765,120.741505,1397220588000|31.300930,120.741555,1397220597000|31.301017,120.741565,1397220599000|31.302283,120.741585,1397220615000|31.305992,120.740848,1397220645000|31.309207,120.739943,1397220675000|31.310338,120.739957,1397220705000|31.310340,120.739952,1397220735000|31.311153,120.739930,1397220765000|31.314243,120.739892,1397220795000|31.316888,120.739845,1397220825000|31.320840,120.739752,1397220855000|31.321165,120.739742,1397220858000|31.321790,120.739710,1397220865000|31.321913,120.739692,1397220868000|31.321938,120.739693,1397220871000|31.321888,120.739740,1397220885000|31.321892,120.739740,1397220914000|31.321922,120.739735,1397220915000|31.322252,120.739737,1397220921000|31.322725,120.739723,1397220926000|31.325275,120.739692,1397220945000|31.327270,120.739637,1397220975000|31.328542,120.739678,1397221005000|31.329593,120.742320,1397221035000|31.330182,120.747333,1397221065000|31.330623,120.751282,1397221095000|31.330618,120.751320,1397221125000|31.330607,120.751407,1397221155000|31.330918,120.754340,1397221177000|31.331068,120.755793,1397221185000|31.331500,120.759808,1397221211000|31.331505,120.759843,1397221215000|31.331508,120.759873,1397221227000|31.331677,120.761520,1397221245000|31.332162,120.766105,1397221275000|31.332687,120.770952,1397221305000|31.333065,120.774278,1397221335000|31.333682,120.780080,1397221365000|31.334092,120.783998,1397221395000|31.334227,120.785270,1397221425000|31.334770,120.788588,1397221445000|31.335070,120.790193,1397221455000|31.335248,120.791162,1397221485000|31.335232,120.791157,1397221515000|31.335420,120.792298,1397221545000|31.336275,120.797518,1397221575000|31.337177,120.802787,1397221605000|31.337497,120.806417,1397221635000|31.336660,120.804210,1397221665000|31.337903,120.802873,1397221695000|31.341393,120.801798,1397221725000|31.345762,120.800380,1397221755000|31.348947,120.799358,1397221785000|31.350855,120.798583,1397221815000|31.354127,120.797527,1397221845000|31.356475,120.796895,1397221875000|31.357428,120.796633,1397221905000|31.357505,120.796600,1397221935000|31.357940,120.796497,1397221965000|31.358272,120.796377,1397221995000|31.358317,120.796343,1397222025000|31.358407,120.796318,1397222039000|31.358500,120.796288,1397222042000|31.358895,120.796162,1397222055000|31.358955,120.796138,1397222061000|31.359025,120.796123,1397222085000|31.359030,120.796147,1397222115000|31.359487,120.796000,1397222145000|31.361550,120.795355,1397222175000|31.363130,120.795995,1397222205000|31.363488,120.799033,1397222235000|31.363525,120.798938,1397222265000|31.363558,120.798903,1397222295000|31.363518,120.798900,1397222315000|31.363517,120.798900,1397222316000|31.363513,120.798902,1397222317000|31.363512,120.798902,1397222318000|31.363515,120.798902,1397222319000|31.363520,120.798898,1397222320000|31.363527,120.798903,1397222321000|31.363525,120.798905,1397222322000|31.363522,120.798905,1397222323000|31.363522,120.798908,1397222324000|31.363523,120.798907,1397222325000|31.363518,120.798893,1397222349000|31.363517,120.798895,1397222350000|31.363515,120.798895,1397222351000|31.363513,120.798893,1397222352000|31.363512,120.798893,1397222353000|31.363512,120.798893,1397222354000|31.363510,120.798893,1397222355000|31.363510,120.798893,1397222356000|31.363508,120.798893,1397222357000|31.363508,120.798893,1397222358000|31.363507,120.798893,1397222359000|31.363507,120.798892,1397222360000|31.363507,120.798892,1397222361000|31.363507,120.798892,1397222362000|31.363505,120.798892,1397222363000|31.363505,120.798892,1397222364000|31.363505,120.798890,1397222365000|31.363503,120.798892,1397222366000|31.363490,120.798890,1397222377000|31.363488,120.798890,1397222378000|31.363488,120.798888,1397222379000|31.363488,120.798888,1397222380000|31.363487,120.798888,1397222381000|31.363487,120.798888,1397222382000|31.363485,120.798888,1397222383000|31.363485,120.798888,1397222384000|31.363487,120.798887,1397222385000|31.363487,120.798887,1397222386000|31.363488,120.798887,1397222387000|31.363488,120.798885,1397222388000|31.363490,120.798885,1397222389000|31.363492,120.798883,1397222390000|31.363492,120.798883,1397222391000|31.363493,120.798883,1397222392000|31.363493,120.798883,1397222393000|31.363495,120.798883,1397222394000|31.363495,120.798883,1397222395000|31.363497,120.798883,1397222396000|31.363497,120.798883,1397222397000|31.363497,120.798883,1397222426000|31.363497,120.798883,1397222456000|31.363497,120.798883,1397222486000|31.363497,120.798883,1397222516000|31.363497,120.798883,1397222546000|31.363497,120.798883,1397222576000|31.363497,120.798883,1397222606000|31.363497,120.798883,1397222636000|" +
      "31.363497,120.798883,1397222666000|31.363497,120.798883,1397222690000|31.363497,120.798883,1397222690000|";
    System.out.println(calPlaceNoteDistance(placeNoteSrc));
  }


}
