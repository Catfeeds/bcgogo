1. 删除出入库相关数据
truncate table in_storage_record;
truncate table out_storage_relation;
truncate table supplier_inventory;

2. 重新初始化
jackchen登录后执行：
init.do?method=initSupplierInventory
init.do?method=initProductThrough&shopId=10000010018221723    (此店铺是高级版 需要初始化)



（以下 白天已执行，忽略）：
1. 找出所有无欠款但有欠款提醒的数据
select remind.customer_id, remind.customer_name, remind.id, remind.debt, receivable.debt from
(select customer_id, customer_name, id, sum(debt) as debt from remind_event where event_type = 'DEBT' and remind_status='activity' and debt>0 group by customer_id) as remind
left join
(select customer_id, sum(debt) as debt from receivable where status_enum != 'REPEAL' and debt_type='CUSTOMER_DEBT_RECEIVABLE' group by customer_id) receivable
on remind.customer_id = receivable.customer_id
where receivable.debt<=0 or receivable.debt is null;

2. 根据customer_id列表执行以下SQL:
update remind_event set remind_status='canceled' where event_type = 'DEBT' and remind_status='activity' and debt>0 and customer_id in (
10000010005000421,
10000010007790732,
10000010009250879,
10000010010091641,
10000010011061065,
10000010012361157,
10000010014271706,
10000010016311569,
10000010016891605,
10000010017332066,
10000010017851725,
10000010018481782,
10000010018481828,
10000010018752089,
10000010020061963,
10000010020062712,
10000010020102374,
10000010020554532,
10000010021222277,
10000010021224349,
10000010021913779,
10000010023572313,
10000010023642385,
10000010023958239,
10000010025392530,
10000010025392578,
10000010025823070,
10000010025823135,
10000010025853186,
10000010026162737,
10000010026163646,
10000010027022642,
10000010027052722,
10000010028432821,
10000010028652770,
10000010028963403,
10000010029763092,
10000010029764025,
10000010030133497,
10000010030134360,
10000010031713752,
10000010032063509,
10000010034953857,
10000010034993867,
10000010035693600,
10000010035993842,
10000010036304083,
10000010036304158,
10000010037054761,
10000010037104188,
10000010037104321,
10000010039753951,
10000010039753952,
10000010039803940,
10000010040073967,
10000010040074583,
10000010040093979,
10000010040094066,
10000010040094152,
10000010040094340,
10000010040094686,
10000010040663966,
10000010040784231,
10000010041914560,
10000010041985913,
10000010043004262,
10000010043004439,
10000010044224362,
10000010044225234,
10000010044225372,
10000010044294367,
10000010045324550,
10000010045414500,
10000010045904644,
10000010045904869,
10000010045904911,
10000010045924519,
10000010045924583,
10000010045924586,
10000010045924667,
10000010045924676,
10000010045925346,
10000010045925891,
10000010046495406,
10000010046545283,
10000010046545424,
10000010047125292,
10000010047125303,
10000010047195317,
10000010047195322,
10000010047195588,
10000010047984830,
10000010048354764,
10000010048354814,
10000010048424874,
10000010048868727,
10000010048868804,
10000010048869338,
10000010048926668,
10000010049705128,
10000010049754930,
10000010050274944,
10000010050435074,
10000010050735150,
10000010050735156,
10000010050736250,
10000010050736324,
10000010050794990,
10000010050795138,
10000010050795433,
10000010050795679,
10000010056525718,
10000010056585583,
10000010056585775,
10000010057155858,
10000010057685668,
10000010058736155,
10000010058755962,
10000010058756048,
10000010058756589,
10000010058756629,
10000010058756681,
10000010059386022,
10000010059386134,
10000010059386344,
10000010059392974,
10000010059393167,
10000010059393276,
10000010059393304,
10000010059393982,
10000010059416436,
10000010059416542,
10000010059418084,
10000010059418165,
10000010060506069,
10000010060506186,
10000010060506233,
10000010060506556,
10000010060576091
);